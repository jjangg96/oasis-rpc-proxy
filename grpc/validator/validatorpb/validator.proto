syntax = "proto3";

package validator;
option go_package = "github.com/jjangg96/oasis-rpc-proxy/grpc/validator/validatorpb";


message P2PInfo {
    // ID is the unique identifier of the node on the P2P transport.
    string id = 1;

    // Addresses is the list of addresses at which the node can be reached.
    repeated string addresses = 2;
}

message ConsensusAddress {
    // ID is public key identifying the node.
    string id = 1;
    // Address is the address at which the node can be reached.
    string address = 2;
}

message ConsensusInfo {
    // ID is the unique identifier of the node as a consensus member.
    string id = 1;

    // Addresses is the list of addresses at which the node can be reached.
    repeated ConsensusAddress addresses = 2;
}

message Version {
    uint32 Major = 1;
    uint32 Minor = 2;
    uint32 Patch = 3;
}

message Runtime {
    // ID is the public key identifying the runtime.
    string id = 1;

    // Version is the version of the runtime.
    Version version = 2;
}

message Node {
    // ID is the public key identifying the node.
    string id = 1;

    // EntityID is the public key identifying the Entity controlling
    // the node.
    string entity_id = 2;

    // Expiration is the epoch in which this node's commitment expires.
    uint64 expiration = 3;

    // P2P contains information for connecting to this node via P2P transport.
    P2PInfo p2p = 5;

    // Consensus contains information for connecting to this node as a
    // consensus member.
    ConsensusInfo consensus = 6;

    // Runtimes are the node's runtimes.
    repeated Runtime runtimes = 7;

    // Roles is a bitmask representing the node roles.
    uint32 roles = 8;
}

message Validator {
    string id = 1;
    int64 voting_power = 2;
    string address = 3;
    string tendermint_address = 4;
    Node node = 5;
    bytes commission = 6;
}

message GetByHeightRequest {
    int64 height = 1;
}

message GetByHeightResponse {
    repeated Validator validators = 1;
}

service ValidatorService {
    rpc GetByHeight (GetByHeightRequest) returns (GetByHeightResponse) {};
}
